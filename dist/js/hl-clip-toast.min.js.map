{"version":3,"file":"hl-clip-toast.min.js","sources":["../../build/js/Core.js","../../build/js/hl-clip-toast.js"],"sourcesContent":["class Core {\r\n    // Default class strings\r\n    static DEFAULT_BUTTON_CLASS = 'btn btn-sm btn-primary position-absolute top-0 end-0 m-2 clipboard-btn';\r\n    static DEFAULT_WRAPPER_CLASS = 'position-relative';\r\n    static DEFAULT_ICON = 'bi bi-clipboard';\r\n    static DEFAULT_ICON_SUCCESS = 'bi bi-check-lg';\r\n    static DEFAULT_MESSAGE_SUCCESS = 'Code copied to clipboard';\r\n    static DEFAULT_MESSAGE_ERROR = 'Error copying the code';\r\n    static DEFAULT_MESSAGE_UNSUPPORTED = 'Clipboard API is not available.';\r\n    static DEFAULT_ICON_DELAY = 1500;\r\n    static DEFAULT_ICON_TIMEOUT = 1500;\r\n\r\n    // Default valid class lists (used if validation is enabled)\r\n    static defaultValidButtonClasses = [\r\n        'btn', 'btn-sm', 'btn-primary', 'btn-success', 'btn-danger', 'btn-warning',\r\n        'position-absolute', 'top-0', 'end-0', 'm-2', 'clipboard-btn'\r\n    ];\r\n\r\n    static defaultValidWrapperClasses = [\r\n        'position-relative', 'custom-wrapper-class'\r\n    ];\r\n\r\n    constructor(config = {}) {\r\n        this.config = {\r\n            iconDefault: Core.DEFAULT_ICON ,\r\n            iconSuccess: Core.DEFAULT_ICON_SUCCESS,\r\n            iconResetDelay: Core.DEFAULT_ICON_DELAY,\r\n            messageSuccess: Core.DEFAULT_MESSAGE_SUCCESS,\r\n            messageError: Core.DEFAULT_MESSAGE_ERROR,\r\n            messageClipboardUnsupported: Core.DEFAULT_MESSAGE_UNSUPPORTED,\r\n            buttonClass: Core.DEFAULT_BUTTON_CLASS,\r\n            wrapperClass: Core.DEFAULT_WRAPPER_CLASS,\r\n            closeButton: false,\r\n            progressBar: false,\r\n            timeOut: Core.DEFAULT_ICON_TIMEOUT,\r\n            validateClasses: true,\r\n            validButtonClasses: Core.defaultValidButtonClasses,\r\n            validWrapperClasses: Core.defaultValidWrapperClasses,\r\n            ...config\r\n        };\r\n    }\r\n\r\n    // Utility: Validate a string of classes against a whitelist\r\n    validateClassList(classString, validClasses) {\r\n        const classList = classString.trim().split(/\\s+/);\r\n        const invalid = classList.filter(cls => !validClasses.includes(cls));\r\n        return {\r\n            isValid: invalid.length === 0,\r\n            invalidClasses: invalid\r\n        };\r\n    }\r\n\r\n    // Apply validation if enabled; fallback to default class if invalid\r\n    getValidatedClass(inputClass, fallbackClass, validList, shouldValidate, label) {\r\n        if (!shouldValidate) return inputClass;\r\n\r\n        const { isValid, invalidClasses } = this.validateClassList(inputClass, validList);\r\n        if (!isValid) {\r\n            console.warn(`Invalid ${label} classes provided: ${invalidClasses.join(', ')}. Default class has been assigned.`);\r\n            return fallbackClass;\r\n        }\r\n        return inputClass;\r\n    }\r\n\r\n    // Create the clipboard button element\r\n    createClipboardButton(codeElement) {\r\n        const shouldValidate = this.config.validateClasses !== false;\r\n        const buttonClass = this.config.buttonClass || Core.DEFAULT_BUTTON_CLASS;\r\n\r\n        const finalButtonClass = this.getValidatedClass(\r\n            buttonClass,\r\n            Core.DEFAULT_BUTTON_CLASS,\r\n            this.config.validButtonClasses,\r\n            shouldValidate,\r\n            'button'\r\n        );\r\n\r\n        const button = document.createElement('button');\r\n        button.className = finalButtonClass;\r\n\r\n        const icon = document.createElement('i');\r\n        icon.className = this.config.iconDefault || Core.DEFAULT_ICON ;\r\n        button.appendChild(icon);\r\n\r\n        button.addEventListener('click', () => {\r\n            if (!navigator.clipboard) {\r\n                toastr.warning(this.config.messageClipboardUnsupported || Core.DEFAULT_MESSAGE_UNSUPPORTED);\r\n                return;\r\n            }\r\n\r\n            const code = codeElement.textContent;\r\n\r\n            navigator.clipboard.writeText(code).then(() => {\r\n                icon.className = this.config.iconSuccess || Core.DEFAULT_ICON_SUCCESS;\r\n\r\n                setTimeout(() => {\r\n                    icon.className = this.config.iconDefault || Core.DEFAULT_ICON ;\r\n                }, this.config.iconResetDelay || Core.DEFAULT_ICON_DELAY);\r\n\r\n                toastr.success(this.config.messageSuccess || Core.DEFAULT_MESSAGE_SUCCESS);\r\n            }).catch(() => {\r\n                toastr.error(this.config.messageError || Core.DEFAULT_MESSAGE_ERROR);\r\n            });\r\n        });\r\n\r\n        return button;\r\n    }\r\n\r\n    // Enhance all <pre><code> blocks on the page\r\n    enhanceCodeBlocks() {\r\n        hljs.highlightAll();\r\n\r\n        const shouldValidate = this.config.validateClasses !== false;\r\n        const wrapperClass = this.config.wrapperClass || Core.DEFAULT_WRAPPER_CLASS;\r\n\r\n        const finalWrapperClass = this.getValidatedClass(\r\n            wrapperClass,\r\n            Core.DEFAULT_WRAPPER_CLASS,\r\n            this.config.validWrapperClasses,\r\n            shouldValidate,\r\n            'wrapper'\r\n        );\r\n\r\n        document.querySelectorAll('pre > code').forEach(code => {\r\n            const pre = code.parentElement;\r\n\r\n            const wrapper = document.createElement('div');\r\n            wrapper.className = finalWrapperClass;\r\n\r\n            pre.parentNode.insertBefore(wrapper, pre);\r\n            wrapper.appendChild(pre);\r\n\r\n            const button = this.createClipboardButton(code);\r\n            wrapper.appendChild(button);\r\n        });\r\n    }\r\n\r\n    // Public method to fire the enhancement\r\n    fire() {\r\n        toastr.options = {\r\n            closeButton: this.config.closeButton ?? false,\r\n            progressBar: this.config.progressBar ?? false,\r\n            timeOut: this.config.timeOut ?? Core.DEFAULT_ICON_TIMEOUT,\r\n            escapeHtml: true,\r\n        };\r\n\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            this.enhanceCodeBlocks();\r\n        });\r\n    }\r\n\r\n    info() {\r\n        console.log(`Info Config:`, this.config);\r\n    }\r\n}\r\n\r\n// Exporta la clase Core como HCT\r\nexport default Core;\r\n","import Core from './Core';\r\n\r\n// Exponer Core en el objeto global `window` como `HCT`\r\nwindow.HCT = Core;"],"names":["Core","config","arguments","length","undefined","this","iconDefault","DEFAULT_ICON","iconSuccess","DEFAULT_ICON_SUCCESS","iconResetDelay","DEFAULT_ICON_DELAY","messageSuccess","DEFAULT_MESSAGE_SUCCESS","messageError","DEFAULT_MESSAGE_ERROR","messageClipboardUnsupported","DEFAULT_MESSAGE_UNSUPPORTED","buttonClass","DEFAULT_BUTTON_CLASS","wrapperClass","DEFAULT_WRAPPER_CLASS","closeButton","progressBar","timeOut","DEFAULT_ICON_TIMEOUT","validateClasses","validButtonClasses","defaultValidButtonClasses","validWrapperClasses","defaultValidWrapperClasses","key","value","classString","validClasses","invalid","trim","split","filter","cls","includes","isValid","invalidClasses","inputClass","fallbackClass","validList","shouldValidate","label","_this$validateClassLi","validateClassList","console","warn","concat","join","codeElement","_this","finalButtonClass","getValidatedClass","button","document","createElement","className","icon","appendChild","addEventListener","navigator","clipboard","code","textContent","writeText","then","setTimeout","toastr","success","catch","error","warning","_this2","hljs","highlightAll","finalWrapperClass","querySelectorAll","forEach","pre","parentElement","wrapper","parentNode","insertBefore","createClipboardButton","_this$config$closeBut","_this$config$progress","_this$config$timeOut","_this3","options","escapeHtml","enhanceCodeBlocks","log","_defineProperty","window","HCT"],"mappings":"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"}